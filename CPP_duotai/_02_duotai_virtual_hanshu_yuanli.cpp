#include<iostream>
#include<stdlib.h>

using namespace std;

/*
	如何实现虚函数和虚析构函数
*/

/*
	虚函数与虚析构函数原理

	函数指针：
			函数，本质上就是内存中的一块二进制代码，而函数指针跟普通的指针一样，也占有4个基本内存单元，
			但是，它指向一块内存地址，但该地址是一函数的首地址。
*/

/*
	在含有虚函数的class Shape中，其数据成员除了我们定义的明显的数据变量，还会增加虚函数表指针。
	该虚函数表指针呢，是一个指针，它指向该类的虚函数表。
	而虚函数表又是什么呢，它是该类的所有virtual声明的虚函数的函数指针，即一个个虚函数的首地址。
	而虚函数指针又是什么呢，它是虚函数的函数指针，该虚函数的首地址。
	若父类，子类都实现了virtual声明的虚函数，则子类，父类的虚函数表对应的同一虚函数的函数指针指向不同的虚函数。
	若子类没有实现父类声明的virtual函数，则子类的虚函数表中对应的虚函数指向父类中定义的虚函数的地址，即它们公用。

	C++中的虚函数表指针，虚函数表和虚函数，共同组成了多态实现的原理。

	虚函数表指针：

	虚函数表：

	虚函数：

*/

/*


*/

int main_bbb() {



	system("pause");
	return 0;
}